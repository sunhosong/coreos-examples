#cloud-config

hostname: coreos-node2

users:
  - name: core
    ssh-authorized-keys:
    passwd: $1$Hml/RnH6$CKAh3xv5legbarFdFQtX/0
    groups:
      - sudo
      - docker

write_files:
  - path: /etc/hosts
    content: |
         192.168.199.11    node1
         192.168.199.12    node2
         192.168.199.13    node3

  - path: /etc/sysctl.d/20-disable-ipv6.conf
    owner: root
    content: |
      net.ipv6.conf.all.disable_ipv6=1
      net.ipv6.conf.default.disable_ipv6=1

  - path: /etc/flannel/options.env
    content: |
      FLANNELD_IFACE=192.168.199.12
      FLANNELD_ETCD_ENDPOINTS=http://192.168.199.11:2379,http://192.168.199.12:2379,http://192.168.199.13:2379

  - path: /etc/kubernetes/cni/docker_opts_cni.env
    content: |
      DOCKER_OPT_BIP=""
      DOCKER_OPT_IPMASQ=""

  - path: /etc/kubernetes/cni/net.d/10-flannel.conf
    content: |
      {
         "name": "podnet"
         "type": "flannel"
         "delegate": {
             "isDefaultGateway": true
         }

      }

  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: quay.io/coreos/hyperkube:v1.5.1_coreos.0
          command:
          - /hyperkube
          - proxy
          - --master=http://192.168.199.11:8080
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
        volumes:
        - hostPath:
            path: /usr/share/ca-certificates
          name: ssl-certs-host

  - path: /etc/kubernetes/worker-kubeconfig.yaml
    content: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          certificate-authority: /etc/kubernetes/ssl/ca.pem
      users:
      - name: kubelet
        user:
          client-certificate: /etc/kubernetes/ssl/worker.pem
          client-key: /etc/kubernetes/ssl/worker-key.pem
      contexts:
      - context:
          cluster: local
          user: kubelet
        name: kubelet-context
      current-context: kubelet-context

coreos:
  etcd2:
    name: "node2"
    initial-cluster: node1=http://192.168.199.11:2380,node2=http://192.168.199.12:2380,node3=http://192.168.199.13:2380
    advertise-client-urls: http://192.168.199.12:2379
    initial-advertise-peer-urls: http://192.168.199.12:2380
    listen-client-urls: http://192.168.199.12:2379,http://127.0.0.1:2379
    listen-peer-urls: http://192.168.199.12:2380

  flannel:
    interface: ens32

  units:
    - name: 00-public.network
      runtime: true
      content: |
        [Match]
        Name=ens160

        [Network]
        DHCP=yes

    - name: 10-service.network
      runtime: true
      content: |
        [Match]
        Name=ens32

        [Network]
        Address=192.168.199.12/24

    - name: systemd-sysctl.service
      command: restart

    - name: etcd2.service
      command: start

    - name: flanneld.service
      drop-ins:
        - name: 40-exec-startpre-symlink.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.1.0.0/16" }'
      command: start

    - name: docker.service
      drop-ins:
        - name: 40-flannel.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
            [Service]
            EnvironmentFile=/etc/kubernetes/cni/docker_opts_cni.env

    - name: kubelet.service
      content: |
        [Service]
        Environment=KUBELET_VERSION=v1.5.0_coreos.0
        Environment="RKT_OPTS=--uuid-file-save=/var/run/kubelet-pod.uuid \
          --volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf"
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --api-servers=http://192.168.199.11:8080 \
          --register-schedulable=false \
          --cni-conf-dir=/etc/kubernetes/cni/net.d \
          --network-plugin=cni \
          --container-runtime=docker \
          --allow-privileged=true \
          --pod-manifest-path=/etc/kubernetes/manifests \
          --hostname-override=192.168.199.12 \
          --cluster_dns=10.3.0.10 \
          --cluster_domain=cluster.local
        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target

